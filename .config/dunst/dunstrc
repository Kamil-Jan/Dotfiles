[global]
    monitor = 0
    follow = keyboard
    geometry = "550x2-40-40"
    indicate_hidden = yes
    shrink = yes
    transparency = 0
    notification_height = 1
    separator_height = 2
    padding = 10
    horizontal_padding = 10
    frame_width = 3

    separator_color = frame
    sort = yes

    idle_threshold = 120
    font = BlexMono Nerd Font 14
    line_height = 0
    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "<b>%s</b>\n%b"

    alignment = left
    vertical_alignment = center
    show_age_threshold = 60
    word_wrap = yes
    ellipsize = middle
    ignore_newline = no
    stack_duplicates = true
    hide_duplicate_count = true
    show_indicators = yes
    icon_position = left
    min_icon_size = 0
    max_icon_size = 32

    icon_path = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/
    sticky_history = yes
    history_length = 20

    dmenu = /usr/bin/dmenu -p dunst:
    browser = /usr/bin/firefox -new-tab
    always_run_script = true

    title = Dunst
    class = Dunst

    startup_notification = false
    verbosity = mesg
    corner_radius = 0

    ignore_dbusclose = false
    force_xinerama = false

    ### mouse

    # Defines list of actions for each mouse event
    # Possible values are:
    # * none: Don't do anything.
    # * do_action: If the notification has exactly one action, or one is marked as default,
    #              invoke it. If there are multiple and no default, open the context menu.
    # * close_current: Close current notification.
    # * close_all: Close all notifications.
    # These values can be strung together for each mouse event, and
    # will be executed in sequence.
    mouse_left_click = close_current
    mouse_middle_click = do_action, close_current
    mouse_right_click = close_all

[experimental]
    per_monitor_dpi = false

[shortcuts]
    close = ctrl+space
    close_all = ctrl+shift+space
    history = ctrl+grave
    context = ctrl+shift+period

[urgency_low]
    # Everforest
    background = "#2f383e"
    foreground = "#d3c6aa"
    frame_color = "#a7c080"

    # Gruvbox
    #background = "#282828"
    #foreground = "#ebdbb2"
    #frame_color = "#fe8019"
    timeout = 5

[urgency_normal]
    # Everforest
    background = "#2f383e"
    foreground = "#d3c6aa"
    frame_color = "#a7c080"

    # Gruvbox
    #background = "#282828"
    #foreground = "#ebdbb2"
    #frame_color = "#fe8019"
    timeout = 5

[urgency_critical]
    background = "#900000"
    foreground = "#f7f2f2"
    frame_color = "#ff0000"
    timeout = 10
    #icon = /path/to/icon

[notify-send]


# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
# Messages can be matched by "appname", "summary", "body", "icon", "category",
# "msg_urgency" and you can override the "timeout", "urgency", "foreground",
# "background", "new_icon" and "format".
# Shell-like globbing will get expanded.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.
#
# vim: ft=cfg
